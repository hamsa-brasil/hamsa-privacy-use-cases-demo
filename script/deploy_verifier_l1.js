const hre = require("hardhat");
const {ignition, ethers} = hre;


async function main() {
    const RelaxedR1CSSNARKForSMLib = await ethers.getContractFactory("RelaxedR1CSSNARKForSMLib");
    const relaxedR1CSSNARKForSMLib = await RelaxedR1CSSNARKForSMLib.deploy();
    await relaxedR1CSSNARKForSMLib.waitForDeployment();
    // console.log("RelaxedR1CSSNARKForSMLib deployed to:", relaxedR1CSSNARKForSMLib.target);

    const BatchedRelaxedR1CSSNARKLib = await ethers.getContractFactory("BatchedRelaxedR1CSSNARKLib");
    const batchedRelaxedR1CSSNARKLib = await BatchedRelaxedR1CSSNARKLib.deploy();
    await batchedRelaxedR1CSSNARKLib.waitForDeployment();
    // console.log("RelaxedR1CSSNARKForSMLib deployed to:", relaxedR1CSSNARKForSMLib.target);

    const CompressedSnarkKib = await ethers.getContractFactory("CompressedSNARKLib");
    const compressedSnarkLib = await CompressedSnarkKib.deploy();
    await compressedSnarkLib.waitForDeployment();
    // console.log("compressedSnarkLib deployed to:", compressedSnarkLib.target);

    const CompressedSNARKVerifierKeyLib = await ethers.getContractFactory("CompressedSNARKVerifierKeyLib");
    const compressedSNARKVerifierKeyLib = await CompressedSNARKVerifierKeyLib.deploy();
    await compressedSNARKVerifierKeyLib.waitForDeployment();
    // console.log("compressedSNARKVerifierKeyLib deployed to:", compressedSNARKVerifierKeyLib.target);

    const ZkVerifier = await ethers.getContractFactory("ZkVerifier", {
        libraries: {
            RelaxedR1CSSNARKForSMLib: relaxedR1CSSNARKForSMLib.target,
            // CompressedSNARKLib: compressedSnarkLib.target,
            // CompressedSNARKVerifierKeyLib: compressedSNARKVerifierKeyLib.target,
            BatchedRelaxedR1CSSNARKLib: batchedRelaxedR1CSSNARKLib.target
        },
    });


    const zkVerifier = await ZkVerifier.deploy();
    await zkVerifier.waitForDeployment()
    console.log("ZkVerifier deployed to:", zkVerifier.target);


    const SimpleVerifier =
        await ethers.getContractFactory("RootStorage", {
            libraries: {
                ZkVerifier: zkVerifier.target,
            },
        });
    const simpleVerifier = await SimpleVerifier.deploy();
    await simpleVerifier.waitForDeployment();
    console.log("VerifierContract deployed to:", simpleVerifier.target);
    // let data = "";
    // let addressTest = "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73";
    // let tRoot = "0x10CA155A00E4E9730037DD116F415491A5901C903D00949150881D762109FDEE";
    // let bRoot = "0x1B479A884316E6C09EF36D82912A6053D41CB95BD67AA8F6EF5C1E0D92F3F5D5";
    // let receipt = await simpleVerifier.verify(data, addressTest);
    // console.log("simpleVerifier execute result is:", receipt);


    // let  resultRootExist1= await simpleVerifier.queryTxRootExist(addressTest,tRoot);
    // console.log("root txroot exist? :", resultRootExist1);

    // let  resultRootExist2= await simpleVerifier.queryBalanceRootExist(addressTest,bRoot);
    // console.log("root intermediate exist? :", resultRootExist2);

    // // let resultLatest = await simpleVerifier.getLatestBalanceRoot(addressTest);
    // // console.log("latest balance for addr is :", resultLatest);
    // let addressTest = "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73";
    // let tRoot = "0x10CA155A00E4E9730037DD116F415491A5901C903D00949150881D762109FDEE";
    // let bRoot = "0x1B479A884316E6C09EF36D82912A6053D41CB95BD67AA8F6EF5C1E0D92F3F5D5";
    // let tx = await  simpleVerifier.verify(data,addressTest);
    // console.log("tx: ", tx);
    //
    // let receipt = await tx.wait();
    // console.log("receipt: ", receipt);
    // let key = await simpleVerifier.queryTxRootExist(addressTest,tRoot);
    // console.log("root txroot exist? :", key);
    // let tmp = await simpleVerifier.queryBalanceRootExist(addressTest,bRoot);
    // console.log("root intermediate exist? :", tmp);


}

main().then()


